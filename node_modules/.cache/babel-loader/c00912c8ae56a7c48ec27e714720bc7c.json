{"ast":null,"code":"var _jsxFileName = \"/home/sakib/Documents/Level-3 Term-1/CSE 326 Internet Programming L/store/src/section/Customer.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getCustomers, getCreatedCustomer, getUpdatedCustomer, getDeletedCustomer } from \"../app/api\"; // Components\n\nimport DataTable from \"./components/DataTable\";\nimport CreateUser from \"./components/CreateUser\";\nimport UpdateUser from \"./components/UpdateUser\";\nimport DeleteUser from \"./components/DeleteUser\";\nimport Modal from \"./components/Modal\";\nimport Search from \"./components/Search\";\nimport Pagination from \"./components/Pagination\";\nimport Loader from \"./components/Loader\";\nimport MySwal from \"./index\";\nexport const Customer = () => {\n  const dispatch = useDispatch();\n  const users = useSelector(state => state.users);\n  const [loading, setLoading] = useState(false);\n  const [currentUser, setCurrentUser] = useState({\n    id: null,\n    avatar: null,\n    first_name: \"\",\n    last_name: \"\",\n    email: \"\"\n  });\n  const [activeModal, setActiveModal] = useState({\n    name: \"\",\n    active: false\n  });\n  const [savedUsers, setSavedUsers] = useState(users);\n  const [pageSize] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [sorted, setSorted] = useState(false);\n  const usersLastIndex = currentPage * pageSize;\n  const usersFirstIndex = usersLastIndex - pageSize;\n  const currentUsers = users.slice(usersFirstIndex, usersLastIndex); // Setting up Modal\n\n  const setModal = modal => {\n    search(\"\");\n    setActiveModal({\n      name: modal,\n      active: true\n    });\n  }; // Pagination\n\n\n  const paginate = page => {\n    setCurrentPage(page);\n  }; // Search\n\n\n  const search = term => {\n    if (term.length > 2) {\n      setCurrentPage(1);\n      const results = savedUsers.filter(user => Object.keys(user).some(key => user[key].toString().toLowerCase().includes(term.toString().toLowerCase())));\n      dispatch({\n        type: \"SET_USERS\",\n        data: results\n      });\n    } else if (!term.length) {\n      dispatch({\n        type: \"SET_USERS\",\n        data: savedUsers\n      });\n    }\n  }; // Sorting\n\n\n  const sorting = key => {\n    setSorted(!sorted);\n\n    switch (key) {\n      case \"name\":\n        const nameSort = [...savedUsers].sort((a, b) => {\n          return sorted ? a.first_name.localeCompare(b.first_name, \"tr\") : b.first_name.localeCompare(a.first_name, \"tr\");\n        });\n        dispatch({\n          type: \"SET_USERS\",\n          data: nameSort\n        });\n        return;\n\n      case \"surname\":\n        const surnameSort = [...savedUsers].sort((a, b) => {\n          return sorted ? a.last_name.localeCompare(b.last_name, \"tr\") : b.last_name.localeCompare(a.last_name, \"tr\");\n        });\n        dispatch({\n          type: \"SET_USERS\",\n          data: surnameSort\n        });\n        return;\n\n      case \"email\":\n        const emailSort = [...savedUsers].sort((a, b) => {\n          return sorted ? a.email.localeCompare(b.email, \"tr\") : b.email.localeCompare(a.email, \"tr\");\n        });\n        dispatch({\n          type: \"SET_USERS\",\n          data: emailSort\n        });\n        return;\n\n      default:\n        break;\n    }\n  }; // Create User\n\n\n  const createUser = async user => {\n    setActiveModal(false);\n    setLoading(true);\n\n    try {\n      await getCreatedCustomer(user).then(res => {\n        const result = res.data;\n        MySwal.fire({\n          icon: \"success\",\n          title: \"User created successfully.\"\n        }).then(() => {\n          dispatch({\n            type: \"CREATE_USER\",\n            data: result\n          });\n          setSavedUsers([...users, result]);\n        });\n      });\n    } catch (err) {\n      MySwal.fire({\n        icon: \"error\",\n        title: \"Failed to create user.\"\n      });\n    } finally {\n      setLoading(false);\n    }\n  }; // Update User\n\n\n  const updateRow = user => {\n    setModal(\"Update User\");\n    setCurrentUser({\n      id: user.id,\n      avatar: user.avatar,\n      first_name: user.first_name,\n      last_name: user.last_name,\n      email: user.email\n    });\n  };\n\n  const updateUser = async (id, updatedUser) => {\n    setActiveModal(false);\n    setLoading(true);\n\n    try {\n      await getUpdatedCustomer(id, updatedUser).then(res => {\n        const result = res.data;\n        MySwal.fire({\n          icon: \"success\",\n          title: \"User updated successfully.\"\n        }).then(() => {\n          dispatch({\n            type: \"SET_USERS\",\n            data: users.map(user => user.id === id ? Object.assign(user, result) : user)\n          });\n        });\n      });\n    } catch (err) {\n      MySwal.fire({\n        icon: \"error\",\n        title: \"Failed to update user.\"\n      });\n    } finally {\n      setLoading(false);\n    }\n  }; // Delete User\n\n\n  const deleteRow = user => {\n    setModal(\"Delete User\");\n    setCurrentUser({\n      id: user.id,\n      avatar: user.avatar,\n      first_name: user.first_name,\n      last_name: user.last_name,\n      email: user.email\n    });\n  };\n\n  const deleteUser = async id => {\n    setActiveModal(false);\n    setLoading(true);\n\n    try {\n      await getDeletedCustomer(id).then(() => {\n        MySwal.fire({\n          icon: \"success\",\n          title: \"User deleted successfully.\"\n        }).then(() => {\n          dispatch({\n            type: \"SET_USERS\",\n            data: users.filter(user => user.id !== id)\n          });\n          setSavedUsers(savedUsers.filter(user => user.id !== id));\n          setCurrentPage(1);\n        });\n      });\n    } catch (err) {\n      MySwal.fire({\n        icon: \"error\",\n        title: \"Failed to delete user.\"\n      });\n    } finally {\n      setLoading(false);\n    }\n  }; // Fetch Users\n\n\n  const fetchUsers = async () => {\n    setLoading(true);\n\n    try {\n      await getCustomers().then(({\n        data\n      }) => {\n        setSavedUsers(data.data);\n        dispatch({\n          type: \"SET_USERS\",\n          data: data.data\n        });\n      });\n    } catch (err) {\n      MySwal.fire({\n        icon: \"error\",\n        title: \"Failed to fetch users.\"\n      });\n    } finally {\n      setTimeout(() => {\n        setLoading(false);\n      }, 500);\n    }\n  };\n\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"main\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 9\n    }\n  }, loading ? /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"toolbar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Search, {\n    search: search,\n    resetSearch: search,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"primary-btn\",\n    onClick: () => setModal(\"Create User\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 17\n    }\n  }, \"Create New User\")), /*#__PURE__*/React.createElement(DataTable, {\n    users: currentUsers,\n    updateRow: updateRow,\n    deleteRow: deleteRow,\n    onSortChange: sorting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Pagination, {\n    totalResults: users.length,\n    currentPage: currentPage,\n    pageSize: pageSize,\n    paginate: paginate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 15\n    }\n  })))), activeModal.active && /*#__PURE__*/React.createElement(Modal, {\n    activeModal: activeModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 9\n    }\n  }, activeModal.name === \"Create User\" && /*#__PURE__*/React.createElement(CreateUser, {\n    createUser: createUser,\n    setActiveModal: setActiveModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 13\n    }\n  }), activeModal.name === \"Update User\" && /*#__PURE__*/React.createElement(UpdateUser, {\n    currentUser: currentUser,\n    updateUser: updateUser,\n    setActiveModal: setActiveModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 13\n    }\n  }), activeModal.name === \"Delete User\" && /*#__PURE__*/React.createElement(DeleteUser, {\n    currentUser: currentUser,\n    deleteUser: deleteUser,\n    setActiveModal: setActiveModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 13\n    }\n  })));\n};","map":{"version":3,"sources":["/home/sakib/Documents/Level-3 Term-1/CSE 326 Internet Programming L/store/src/section/Customer.js"],"names":["React","useEffect","useState","useSelector","useDispatch","getCustomers","getCreatedCustomer","getUpdatedCustomer","getDeletedCustomer","DataTable","CreateUser","UpdateUser","DeleteUser","Modal","Search","Pagination","Loader","MySwal","Customer","dispatch","users","state","loading","setLoading","currentUser","setCurrentUser","id","avatar","first_name","last_name","email","activeModal","setActiveModal","name","active","savedUsers","setSavedUsers","pageSize","currentPage","setCurrentPage","sorted","setSorted","usersLastIndex","usersFirstIndex","currentUsers","slice","setModal","modal","search","paginate","page","term","length","results","filter","user","Object","keys","some","key","toString","toLowerCase","includes","type","data","sorting","nameSort","sort","a","b","localeCompare","surnameSort","emailSort","createUser","then","res","result","fire","icon","title","err","updateRow","updateUser","updatedUser","map","assign","deleteRow","deleteUser","fetchUsers","setTimeout"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  getCustomers,\n  getCreatedCustomer,\n  getUpdatedCustomer,\n  getDeletedCustomer\n} from \"../app/api\";\n\n// Components\nimport DataTable from \"./components/DataTable\";\nimport CreateUser from \"./components/CreateUser\";\nimport UpdateUser from \"./components/UpdateUser\";\nimport DeleteUser from \"./components/DeleteUser\";\nimport Modal from \"./components/Modal\";\nimport Search from \"./components/Search\";\nimport Pagination from \"./components/Pagination\";\nimport Loader from \"./components/Loader\";\nimport MySwal from \"./index\";\n\nexport const Customer = () => {\n  const dispatch = useDispatch();\n  const users = useSelector(state => state.users);\n\n  const [loading, setLoading] = useState(false);\n\n  const [currentUser, setCurrentUser] = useState({\n    id: null,\n    avatar: null,\n    first_name: \"\",\n    last_name: \"\",\n    email: \"\"\n  });\n  const [activeModal, setActiveModal] = useState({ name: \"\", active: false });\n  const [savedUsers, setSavedUsers] = useState(users);\n  const [pageSize] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [sorted, setSorted] = useState(false);\n\n  const usersLastIndex = currentPage * pageSize;\n  const usersFirstIndex = usersLastIndex - pageSize;\n  const currentUsers = users.slice(usersFirstIndex, usersLastIndex);\n\n  // Setting up Modal\n  const setModal = modal => {\n    search(\"\");\n    setActiveModal({ name: modal, active: true });\n  };\n\n  // Pagination\n  const paginate = page => {\n    setCurrentPage(page);\n  };\n\n  // Search\n  const search = term => {\n    if (term.length > 2) {\n      setCurrentPage(1);\n\n      const results = savedUsers.filter(user =>\n        Object.keys(user).some(key =>\n          user[key]\n            .toString()\n            .toLowerCase()\n            .includes(term.toString().toLowerCase())\n        )\n      );\n\n      dispatch({ type: \"SET_USERS\", data: results });\n    } else if (!term.length) {\n      dispatch({ type: \"SET_USERS\", data: savedUsers });\n    }\n  };\n\n  // Sorting\n  const sorting = key => {\n    setSorted(!sorted);\n    switch (key) {\n      case \"name\":\n        const nameSort = [...savedUsers].sort((a, b) => {\n          return sorted\n            ? a.first_name.localeCompare(b.first_name, \"tr\")\n            : b.first_name.localeCompare(a.first_name, \"tr\");\n        });\n        dispatch({ type: \"SET_USERS\", data: nameSort });\n        return;\n      case \"surname\":\n        const surnameSort = [...savedUsers].sort((a, b) => {\n          return sorted\n            ? a.last_name.localeCompare(b.last_name, \"tr\")\n            : b.last_name.localeCompare(a.last_name, \"tr\");\n        });\n        dispatch({ type: \"SET_USERS\", data: surnameSort });\n        return;\n      case \"email\":\n        const emailSort = [...savedUsers].sort((a, b) => {\n          return sorted\n            ? a.email.localeCompare(b.email, \"tr\")\n            : b.email.localeCompare(a.email, \"tr\");\n        });\n        dispatch({ type: \"SET_USERS\", data: emailSort });\n        return;\n      default:\n        break;\n    }\n  };\n\n  // Create User\n  const createUser = async user => {\n    setActiveModal(false);\n    setLoading(true);\n\n    try {\n      await getCreatedCustomer(user).then(res => {\n        const result = res.data;\n        MySwal.fire({\n          icon: \"success\",\n          title: \"User created successfully.\"\n        }).then(() => {\n          dispatch({ type: \"CREATE_USER\", data: result });\n          setSavedUsers([...users, result]);\n        });\n      });\n    } catch (err) {\n      MySwal.fire({\n        icon: \"error\",\n        title: \"Failed to create user.\"\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Update User\n  const updateRow = user => {\n    setModal(\"Update User\");\n\n    setCurrentUser({\n      id: user.id,\n      avatar: user.avatar,\n      first_name: user.first_name,\n      last_name: user.last_name,\n      email: user.email\n    });\n  };\n\n  const updateUser = async (id, updatedUser) => {\n    setActiveModal(false);\n    setLoading(true);\n\n    try {\n      await getUpdatedCustomer(id, updatedUser).then(res => {\n        const result = res.data;\n        MySwal.fire({\n          icon: \"success\",\n          title: \"User updated successfully.\"\n        }).then(() => {\n          dispatch({\n            type: \"SET_USERS\",\n            data: users.map(user =>\n              user.id === id ? Object.assign(user, result) : user\n            )\n          });\n        });\n      });\n    } catch (err) {\n      MySwal.fire({\n        icon: \"error\",\n        title: \"Failed to update user.\"\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Delete User\n  const deleteRow = user => {\n    setModal(\"Delete User\");\n\n    setCurrentUser({\n      id: user.id,\n      avatar: user.avatar,\n      first_name: user.first_name,\n      last_name: user.last_name,\n      email: user.email\n    });\n  };\n\n  const deleteUser = async id => {\n    setActiveModal(false);\n    setLoading(true);\n\n    try {\n      await getDeletedCustomer(id).then(() => {\n        MySwal.fire({\n          icon: \"success\",\n          title: \"User deleted successfully.\"\n        }).then(() => {\n          dispatch({\n            type: \"SET_USERS\",\n            data: users.filter(user => user.id !== id)\n          });\n          setSavedUsers(savedUsers.filter(user => user.id !== id));\n          setCurrentPage(1);\n        });\n      });\n    } catch (err) {\n      MySwal.fire({\n        icon: \"error\",\n        title: \"Failed to delete user.\"\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Fetch Users\n  const fetchUsers = async () => {\n    setLoading(true);\n\n    try {\n      await getCustomers().then(({ data }) => {\n        setSavedUsers(data.data);\n        dispatch({ type: \"SET_USERS\", data: data.data });\n      });\n    } catch (err) {\n      MySwal.fire({\n        icon: \"error\",\n        title: \"Failed to fetch users.\"\n      });\n    } finally {\n      setTimeout(() => {\n        setLoading(false);\n      }, 500);\n    }\n  };\n\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n\n  return (\n    <div className=\"app\">\n      <main className=\"content\">\n        <div className=\"container\">\n          {loading ? (\n            <Loader />\n          ) : (\n            <div className=\"content-wrapper\">\n              <div className=\"toolbar\">\n                <Search search={search} resetSearch={search} />\n                <button\n                  className=\"primary-btn\"\n                  onClick={() => setModal(\"Create User\")}\n                >\n                  Create New User\n                </button>\n              </div>\n              <DataTable\n                users={currentUsers}\n                updateRow={updateRow}\n                deleteRow={deleteRow}\n                onSortChange={sorting}\n              />\n              <Pagination\n                totalResults={users.length}\n                currentPage={currentPage}\n                pageSize={pageSize}\n                paginate={paginate}\n              />\n            </div>\n          )}\n        </div>\n      </main>\n      {activeModal.active && (\n        <Modal activeModal={activeModal}>\n          {activeModal.name === \"Create User\" && (\n            <CreateUser\n              createUser={createUser}\n              setActiveModal={setActiveModal}\n            />\n          )}\n          {activeModal.name === \"Update User\" && (\n            <UpdateUser\n              currentUser={currentUser}\n              updateUser={updateUser}\n              setActiveModal={setActiveModal}\n            />\n          )}\n          {activeModal.name === \"Delete User\" && (\n            <DeleteUser\n              currentUser={currentUser}\n              deleteUser={deleteUser}\n              setActiveModal={setActiveModal}\n            />\n          )}\n        </Modal>\n      )}\n    </div>\n  );\n};"]},"metadata":{},"sourceType":"module"}