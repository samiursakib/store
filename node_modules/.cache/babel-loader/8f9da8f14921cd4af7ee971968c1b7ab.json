{"ast":null,"code":"var _jsxFileName = \"/home/sakib/Documents/Level-3 Term-1/CSE 326 Internet Programming L/store/src/section/Order.js\";\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { getOrders, getCreatedOrder, getUpdatedOrder, getDeletedOrder } from \"../app/api\"; // Components\n\nimport { OrderTable } from \"../components/Table\";\nimport CreateOrder from \"../components/CreateOrder\";\nimport UpdateOrder from \"../components/UpdateOrder\";\nimport DeleteOrder from \"../components/DeleteOrder\";\nimport Modal from \"../components/Modal\";\nimport Search from \"../components/Search\";\nimport Pagination from \"../components/Pagination\";\nimport Loader from \"../components/Loader\";\nimport MySwal from \"../index\";\nexport const Order = () => {\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState(false);\n  const [currentOrder, setCurrentOrder] = useState({\n    id: null,\n    customerId: null,\n    productCategory: '',\n    productId: null,\n    quantity: 0\n  });\n  const [orders, setOrders] = useState([]);\n  const [activeModal, setActiveModal] = useState({\n    name: \"\",\n    active: false\n  });\n  const [pageSize] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [sorted, setSorted] = useState(false);\n  getOrders().then(response => {\n    setOrders(response.data);\n  }).catch(e => {\n    console.log(e);\n  });\n  const customersLastIndex = currentPage * pageSize;\n  const customersFirstIndex = customersLastIndex - pageSize;\n  const currentOrders = orders.slice(customersFirstIndex, customersLastIndex); // Setting up Modal\n\n  const setModal = modal => {\n    search(\"\");\n    setActiveModal({\n      name: modal,\n      active: true\n    });\n  }; // Pagination\n\n\n  const paginate = page => {\n    setCurrentPage(page);\n  }; // Search\n  //sorting\n  // Create Order\n\n\n  const createOrder = async order => {\n    setActiveModal(false);\n    setLoading(true);\n\n    try {\n      await getCreatedOrder(order).then(res => {\n        const result = res.data;\n        MySwal.fire({\n          icon: \"success\",\n          title: \"Order created successfully.\"\n        }).then(() => {\n          dispatch({\n            type: \"CREATE_ORDER\",\n            data: result\n          });\n          setOrders([...orders, result]);\n        });\n      });\n    } catch (err) {\n      MySwal.fire({\n        icon: \"error\",\n        title: \"Failed to create order.\"\n      });\n    } finally {\n      setLoading(false);\n    }\n  }; // Update Order\n\n\n  const updateRow = order => {\n    setModal(\"Update Order\");\n    setCurrentOrder({\n      id: order.id,\n      customerId: order.customerId,\n      productCategory: order.productCategory,\n      productId: order.productId,\n      quantity: order.quantity\n    });\n  };\n\n  const updateOrder = async (id, updatedOrder) => {\n    setActiveModal(false);\n    setLoading(true);\n\n    try {\n      await getUpdatedOrder(id, updatedOrder).then(res => {\n        const result = res.data;\n        MySwal.fire({\n          icon: \"success\",\n          title: \"Order updated successfully.\"\n        }).then(() => {\n          dispatch({\n            type: \"SET_ORDERS\",\n            data: orders.map(order => order.id === id ? Object.assign(order, result) : order)\n          });\n        });\n      });\n    } catch (err) {\n      MySwal.fire({\n        icon: \"error\",\n        title: \"Failed to update order.\"\n      });\n    } finally {\n      setLoading(false);\n    }\n  }; // Delete Order\n\n\n  const deleteRow = order => {\n    setModal(\"Delete Order\");\n    setCurrentOrder({\n      id: order.id,\n      customerId: order.customerId,\n      productCategory: order.productCategory,\n      productId: order.productId,\n      quantity: order.quantity\n    });\n  };\n\n  const deleteOrder = async id => {\n    setActiveModal(false);\n    setLoading(true);\n\n    try {\n      await getDeletedOrder(id).then(() => {\n        MySwal.fire({\n          icon: \"success\",\n          title: \"Order deleted successfully.\"\n        }).then(() => {\n          dispatch({\n            type: \"SET_ORDERS\",\n            data: orders.filter(order => order.id !== id)\n          });\n          setOrders(orders.filter(order => order.id !== id));\n          setCurrentPage(1);\n        });\n      });\n    } catch (err) {\n      MySwal.fire({\n        icon: \"error\",\n        title: \"Failed to delete order.\"\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"main\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }\n  }, loading ? /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"toolbar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Search, {\n    search: search,\n    resetSearch: search,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"primary-btn\",\n    onClick: () => setModal(\"Create Order\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 17\n    }\n  }, \"Create New Order\")), /*#__PURE__*/React.createElement(OrderTable, {\n    orders: currentOrders,\n    updateRow: updateRow,\n    deleteRow: deleteRow,\n    onSortChange: sorting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Pagination, {\n    totalResults: orders.length,\n    currentPage: currentPage,\n    pageSize: pageSize,\n    paginate: paginate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 15\n    }\n  })))), activeModal.active && /*#__PURE__*/React.createElement(Modal, {\n    activeModal: activeModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 9\n    }\n  }, activeModal.name === \"Create Order\" && /*#__PURE__*/React.createElement(CreateOrder, {\n    createOrder: createOrder,\n    setActiveModal: setActiveModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }\n  }), activeModal.name === \"Update Order\" && /*#__PURE__*/React.createElement(UpdateOrder, {\n    currentOrder: currentOrder,\n    updateOrder: updateOrder,\n    setActiveModal: setActiveModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 13\n    }\n  }), activeModal.name === \"Delete Order\" && /*#__PURE__*/React.createElement(DeleteOrder, {\n    currentOrder: currentOrder,\n    deleteOrder: deleteOrder,\n    setActiveModal: setActiveModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }\n  })));\n};","map":{"version":3,"sources":["/home/sakib/Documents/Level-3 Term-1/CSE 326 Internet Programming L/store/src/section/Order.js"],"names":["React","useState","useDispatch","getOrders","getCreatedOrder","getUpdatedOrder","getDeletedOrder","OrderTable","CreateOrder","UpdateOrder","DeleteOrder","Modal","Search","Pagination","Loader","MySwal","Order","dispatch","loading","setLoading","currentOrder","setCurrentOrder","id","customerId","productCategory","productId","quantity","orders","setOrders","activeModal","setActiveModal","name","active","pageSize","currentPage","setCurrentPage","sorted","setSorted","then","response","data","catch","e","console","log","customersLastIndex","customersFirstIndex","currentOrders","slice","setModal","modal","search","paginate","page","createOrder","order","res","result","fire","icon","title","type","err","updateRow","updateOrder","updatedOrder","map","Object","assign","deleteRow","deleteOrder","filter","sorting","length"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  getOrders,\n  getCreatedOrder,\n  getUpdatedOrder,\n  getDeletedOrder\n} from \"../app/api\";\n\n// Components\nimport { OrderTable } from \"../components/Table\";\nimport CreateOrder from \"../components/CreateOrder\";\nimport UpdateOrder from \"../components/UpdateOrder\";\nimport DeleteOrder from \"../components/DeleteOrder\";\nimport Modal from \"../components/Modal\";\nimport Search from \"../components/Search\";\nimport Pagination from \"../components/Pagination\";\nimport Loader from \"../components/Loader\";\nimport MySwal from \"../index\";\n\nexport const Order = () => {\n    const dispatch = useDispatch();\n    const [loading, setLoading] = useState(false);  \n    const [currentOrder, setCurrentOrder] = useState({\n        id: null,\n        customerId: null,\n        productCategory: '',\n        productId: null,\n        quantity: 0\n  });\n  const [orders, setOrders] = useState([]);\n  const [activeModal, setActiveModal] = useState({ name: \"\", active: false });\n  const [pageSize] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [sorted, setSorted] = useState(false);\n  \n  getOrders()\n    .then((response) => {\n      setOrders(response.data);\n    })\n    .catch(e => {\n      console.log(e);\n    });\n\n  const customersLastIndex = currentPage * pageSize;\n  const customersFirstIndex = customersLastIndex - pageSize;\n  const currentOrders = orders.slice(customersFirstIndex, customersLastIndex);\n\n  // Setting up Modal\n  const setModal = modal => {\n    search(\"\");\n    setActiveModal({ name: modal, active: true });\n  };\n\n  // Pagination\n  const paginate = page => {\n    setCurrentPage(page);\n  };\n\n  // Search\n\n  //sorting\n\n  // Create Order\n  const createOrder = async order => {\n    setActiveModal(false);\n    setLoading(true);\n\n    try {\n      await getCreatedOrder(order).then(res => {\n        const result = res.data;\n        MySwal.fire({\n          icon: \"success\",\n          title: \"Order created successfully.\"\n        }).then(() => {\n          dispatch({ type: \"CREATE_ORDER\", data: result });\n          setOrders([...orders, result]);\n        });\n      });\n    } catch (err) {\n      MySwal.fire({\n        icon: \"error\",\n        title: \"Failed to create order.\"\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Update Order\n  const updateRow = order => {\n    setModal(\"Update Order\");\n\n    setCurrentOrder({\n      id: order.id,\n      customerId: order.customerId,      \n      productCategory: order.productCategory,\n      productId: order.productId,\n      quantity: order.quantity\n    });\n  };\n\n  const updateOrder = async (id, updatedOrder) => {\n    setActiveModal(false);\n    setLoading(true);\n\n    try {\n      await getUpdatedOrder(id, updatedOrder).then(res => {\n        const result = res.data;\n        MySwal.fire({\n          icon: \"success\",\n          title: \"Order updated successfully.\"\n        }).then(() => {\n          dispatch({\n            type: \"SET_ORDERS\",\n            data: orders.map(order =>\n              order.id === id ? Object.assign(order, result) : order\n            )\n          });\n        });\n      });\n    } catch (err) {\n      MySwal.fire({\n        icon: \"error\",\n        title: \"Failed to update order.\"\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Delete Order\n  const deleteRow = order => {\n    setModal(\"Delete Order\");\n\n    setCurrentOrder({\n      id: order.id,\n      customerId: order.customerId,\n      productCategory: order.productCategory,\n      productId: order.productId,\n      quantity: order.quantity\n    });\n  };\n\n  const deleteOrder = async id => {\n    setActiveModal(false);\n    setLoading(true);\n\n    try {\n      await getDeletedOrder(id).then(() => {\n        MySwal.fire({\n          icon: \"success\",\n          title: \"Order deleted successfully.\"\n        }).then(() => {\n          dispatch({\n            type: \"SET_ORDERS\",\n            data: orders.filter(order => order.id !== id)\n          });\n          setOrders(orders.filter(order => order.id !== id));\n          setCurrentPage(1);\n        });\n      });\n    } catch (err) {\n      MySwal.fire({\n        icon: \"error\",\n        title: \"Failed to delete order.\"\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      <main className=\"content\">\n        <div className=\"container\">\n          {loading ? (\n            <Loader />\n          ) : (\n            <div className=\"content-wrapper\">\n              <div className=\"toolbar\">\n                <Search search={search} resetSearch={search} />\n                <button\n                  className=\"primary-btn\"\n                  onClick={() => setModal(\"Create Order\")}\n                >\n                  Create New Order\n                </button>\n              </div>\n              <OrderTable\n                orders={currentOrders}\n                updateRow={updateRow}\n                deleteRow={deleteRow}\n                onSortChange={sorting}\n              />\n              <Pagination\n                totalResults={orders.length}\n                currentPage={currentPage}\n                pageSize={pageSize}\n                paginate={paginate}\n              />\n            </div>\n          )}\n        </div>\n      </main>\n      {activeModal.active && (\n        <Modal activeModal={activeModal}>\n          {activeModal.name === \"Create Order\" && (\n            <CreateOrder\n              createOrder={createOrder}\n              setActiveModal={setActiveModal}\n            />\n          )}\n          {activeModal.name === \"Update Order\" && (\n            <UpdateOrder\n              currentOrder={currentOrder}\n              updateOrder={updateOrder}\n              setActiveModal={setActiveModal}\n            />\n          )}\n          {activeModal.name === \"Delete Order\" && (\n            <DeleteOrder\n              currentOrder={currentOrder}\n              deleteOrder={deleteOrder}\n              setActiveModal={setActiveModal}\n            />\n          )}\n        </Modal>\n      )}\n    </div>\n  );\n};"]},"metadata":{},"sourceType":"module"}